// <auto-generated />
using System;
using DigitalBank.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalBank.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250323161001_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("DigitalBank.Domain.Entities.Conta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_abertura");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_inativacao");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("documento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("TEXT")
                        .HasColumnName("saldo");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<string>("UsuarioInativacao")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("usuario_inativacao");

                    b.HasKey("Id");

                    b.HasIndex("Documento")
                        .IsUnique();

                    b.ToTable("CONTAS", (string)null);
                });

            modelBuilder.Entity("DigitalBank.Domain.Entities.Transferencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("ContaDestinoId")
                        .HasColumnType("TEXT")
                        .HasColumnName("conta_destino_id");

                    b.Property<Guid>("ContaOrigemId")
                        .HasColumnType("TEXT")
                        .HasColumnName("conta_origem_id");

                    b.Property<DateTime>("DataTransferencia")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_transferencia");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("ContaDestinoId");

                    b.HasIndex("ContaOrigemId");

                    b.ToTable("TRANSFERENCIAS", (string)null);
                });

            modelBuilder.Entity("DigitalBank.Domain.Entities.Transferencia", b =>
                {
                    b.HasOne("DigitalBank.Domain.Entities.Conta", "ContaDestino")
                        .WithMany("TransferenciasDestino")
                        .HasForeignKey("ContaDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DigitalBank.Domain.Entities.Conta", "ContaOrigem")
                        .WithMany("TransferenciasOrigem")
                        .HasForeignKey("ContaOrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContaDestino");

                    b.Navigation("ContaOrigem");
                });

            modelBuilder.Entity("DigitalBank.Domain.Entities.Conta", b =>
                {
                    b.Navigation("TransferenciasDestino");

                    b.Navigation("TransferenciasOrigem");
                });
#pragma warning restore 612, 618
        }
    }
}
